# example pipeline for SRM scans using the Bridge CLI
trigger:
- main
- develop
pool:
  vmImage: ubuntu-latest
variables:
  - group: srm316.poc.blackduck.com
steps:
- task: JavaToolInstaller@0
  displayName: 'Install JDK'
  inputs:
    versionSpec: 21
    jdkArchitectureOption: x64
    jdkSourceOption: PreInstalled
- task: Maven@4
  displayName: 'Maven Build'
  inputs:
    options: '-B -DskipTests'
- bash: |
    curl -fLsS -o bridge.zip $BRIDGECLI_LINUX64 && unzip -qo -d $(Agent.TempDirectory) bridge.zip && rm -f bridge.zip
    $(Agent.TempDirectory)/bridge-cli-bundle-linux64/bridge-cli --stage srm
  env:
    BRIDGE_SRM_URL: $(SRM_URL)
    BRIDGE_SRM_APIKEY: $(SRM_APIKEY)
    BRIDGE_SRM_ASSESSMENT_TYPES: 'SAST,SCA'
    BRIDGE_SRM_PROJECT_NAME: $(Build.Repository.Name)
    BRIDGE_SRM_BRANCH_NAME: $(Build.SourceBranchName)
    BRIDGE_COVERITY_BUILD_COMMAND: mvn -B -DskipTests package
    BRIDGE_COVERITY_CLEAN_COMMAND: mvn -B clean
  displayName: 'SRM Scan'
- task: ArchiveFiles@2
  displayName: 'Copy Log Files'
  condition: succeededOrFailed()
  enabled: false
  inputs:
    rootFolderOrFile: .bridge
    includeRootFolder: false
    archiveFile: '$(Build.ArtifactStagingDirectory)/bridge-logs.zip'
- task: PublishBuildArtifacts@1
  displayName: 'Publish Log Files'
  condition: succeededOrFailed()
  enabled: false
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'logs'
