# example pipeline for Coverity scans using the Synopsys Coverity extension and the Coverity CLI
# https://marketplace.visualstudio.com/items?itemName=synopsys-coverity.synopsys-coverity-azure-devops
trigger:
- main
pool:
  vmImage: ubuntu-latest
variables:
- group: cnc.chuckaude.com
- name: COVERITY_TOOL_HOME
  value: $(Agent.TempDirectory)/$(COVERITY_TOOLKIT)
steps:
- task: JavaToolInstaller@0
  displayName: 'Install JDK'
  inputs:
    versionSpec: 21
    jdkArchitectureOption: x64
    jdkSourceOption: PreInstalled
- task: Maven@4
  displayName: 'Maven Build'
  inputs:
    options: '-B -DskipTests'
- bash: |
    curl -fLsS --user $COV_USER:$COVERITY_PASSPHRASE $COVERITY_URL/downloadFile.htm?fn=$COVERITY_TOOLKIT.tar.gz | tar -C $(Agent.TempDirectory) -xzf -
    curl -fLsS --user $COV_USER:$COVERITY_PASSPHRASE -o $COVERITY_TOOL_HOME/bin/license.dat $COVERITY_URL/downloadFile.htm?fn=license.dat
  env:
    COV_USER: $(COV_USER)
    COVERITY_PASSPHRASE: $(COVERITY_PASSPHRASE)
  displayName: 'Coverity Download'
- task: synopsys-coverity@1
  displayName: 'Coverity Scan'
  inputs:
    coverityService: 'cnc.chuckaude.com'
    allowUntrusted: true
    projectName: '$(Build.Repository.Name)'
    streamName: '$(Build.Repository.Name)-$(Build.SourceBranchName)'
    checkIssues: true
    issueView: 'Outstanding Issues'
    issueStatus: 'unstable'
    coverityRunType: 'custom'
    customCoverityCommands: 'coverity scan -o commit.connect.url=$COVERITY_URL -o commit.connect.project=$COV_PROJECT -o commit.connect.stream=$COV_STREAM'
- task: CopyFiles@2
  displayName: 'Copy Log Files'
  condition: succeededOrFailed()
  enabled: false
  inputs:
    Contents: |
      idir/build-log.txt
      idir/output/analysis-log.txt
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    flattenFolders: true
- task: PublishBuildArtifacts@1
  displayName: 'Publish Log Files'
  condition: succeededOrFailed()
  enabled: false
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'logs'
