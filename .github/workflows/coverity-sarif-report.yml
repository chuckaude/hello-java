# example workflow for Coverity scans using the Black Duck Security Scan Action
# https://github.com/marketplace/actions/black-duck-security-scan
name: coverity-sarif-report
on:
  push:
    branches: [ main, master, develop, stage, release ]
  workflow_dispatch:
jobs:
  coverity:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Source
      uses: actions/checkout@v4
    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        java-version: 21
        distribution: temurin
        cache: maven
    - name: Coverity Full Scan
      uses: blackduck-inc/black-duck-security-scan@v2
      with:
        coverity_url: ${{ vars.COVERITY_URL }}
        coverity_user: ${{ secrets.COV_USER }}
        coverity_passphrase: ${{ secrets.COVERITY_PASSPHRASE }}
        # coverity_project_name: ${{ github.event.repository.name }}
        # coverity_stream_name: ${{ github.event.repository.name }}-${{ github.ref_name }}
        # coverity_policy_view: 'Outstanding Issues'
        coverity_build_command: mvn -B -DskipTests package
        coverity_clean_command: mvn -B clean
        coverity_local: true
    - name: Coverity SARIF Report
      env:
        COVERITY_URL: ${{ vars.COVERITY_URL }}
        COV_USER: ${{ secrets.COV_USER }}
        COVERITY_PASSPHRASE: ${{ secrets.COVERITY_PASSPHRASE }}
      run: |
        COVERITY_TOOL_HOME=$HOME/.blackduck/bridge/tools/cov-analysis/*
        IDIR=$(find ${{ github.workspace }}/.bridge -name idir)
        $COVERITY_TOOL_HOME/bin/cov-format-errors --dir "$IDIR" --json-output-v10 issues.json
        $COVERITY_TOOL_HOME/node/bin/node $COVERITY_TOOL_HOME/SARIF/cov-format-sarif-for-github.js --inputFile issues.json --outputFile results.sarif \
          --githubUrl ${{ github.server_url }} --repoName ${{ github.repository }} --checkoutPath ${{ github.repository }} ${{ github.workspace }} ${{ github.sha }}
    - name: Upload SARIF Report
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: results.sarif
#    - name: Save Logs
#      if: always()
#      uses: actions/upload-artifact@v4
#      with:
#        name: bridge-logs
#        path: ${{ github.workspace }}/.bridge
#        include-hidden-files: true
