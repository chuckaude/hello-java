# example pipeline for Black Duck & Coverity on Polaris scans using the Detect & Coverity on Polaris extensions
# https://marketplace.visualstudio.com/items?itemName=blackduck.blackduck-detect
# https://marketplace.visualstudio.com/items?itemName=blackduck.blackduck-coverity-on-polaris
trigger:
- main
pool:
  vmImage: ubuntu-latest
variables:
  DETECT_PROJECT_NAME: $(Build.Repository.Name)
  DETECT_PROJECT_VERSION_NAME: $(Build.SourceBranchName)
  DETECT_CODE_LOCATION_NAME: $(Build.Repository.Name)-$(Build.SourceBranchName)
steps:
- task: JavaToolInstaller@0
  displayName: 'Install JDK'
  inputs:
    versionSpec: 21
    jdkArchitectureOption: x64
    jdkSourceOption: PreInstalled
- task: Maven@4
  displayName: 'Maven Build'
  inputs:
    options: '-B -DskipTests'
- task: BlackDuckDetectTask@10
  displayName: 'Black Duck SCA Scan'
  inputs:
    BlackDuckScaService: sca316.poc.blackduck.com
    DetectArguments: '--detect.policy.check.fail.on.severities=BLOCKER'
- task: BlackduckCoverityOnPolaris@2
  displayName: 'Coverity on Polaris Scan'
  inputs:
    polarisService: 'sipse.cop.blackduck.com'
    polarisCommand: '--co project.name=$(Build.Repository.Name) analyze -w'
- task: CopyFiles@2
  displayName: 'Copy Log Files'
  condition: succeededOrFailed()
  enabled: false
  inputs:
    Contents: |
      .blackduck/polaris/configuration/resolved-polaris.yml
      .blackduck/polaris/data/coverity/*/idir/build-log.txt
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    flattenFolders: true
- task: PublishBuildArtifacts@1
  displayName: 'Publish Log Files'
  condition: succeededOrFailed()
  enabled: false
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'logs'
